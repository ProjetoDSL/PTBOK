<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmi:id="-4g1cENKD9zg7JhnA1Ri11Q" name="vv_techniques,_hKxXcPipEeq-GNGrt9WlHQ" guid="-4g1cENKD9zg7JhnA1Ri11Q" changeDate="2020-10-22T13:53:28.887-0300">
  <mainDescription>&lt;p>&#xD;
    Inspection&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Teams of experts, developers, and testers will thoroughly scan the content (algorithms, programming code,&#xD;
        documents, equations) in the original conceptual model, and compare with the appropriate counterpart to verify how&#xD;
        closely the executable model matches.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Limit Value Analysis&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        This criterion places its attention on the limit values of the program's input domain, because according to the&#xD;
        literature, this is where the greatest number of errors is concentrated.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Partitioning into Equivalence Classes&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        This criterion divides the program's input domain into equivalence classes or partitions, based on information from&#xD;
        both the input and output of the program. This criterion can simplify and reduce the test cases, because it selects&#xD;
        representative elements of each valid and invalid class, testing through an element, a set or class of input data,&#xD;
        thus reducing the input domain and, consequently, the time associated with the activity.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Structural Testing (White Box)&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The Structural Test criteria are based on different types of components to determine which parts of the program&#xD;
        should be run. They are classified into criteria based on flow of control and criteria based on data flow. The&#xD;
        structured test considers the implementation aspects when choosing test cases, that is, the tester uses the&#xD;
        internal structure (implementation) of the product to be tested.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Step by Step Abstraction&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The procedure consists of readings taken in the source code, from which the reviewers write their own&#xD;
        specifications for the program. The abstractions constructed for each block are combined, generating a more general&#xD;
        abstraction, repeating successively and, at the end, the Program Function is obtained, which must then be compared&#xD;
        with the Specification to identify if there are inconsistencies.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Inspection&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Teams of experts, developers, and testers will thoroughly scan the content (algorithms, programming code,&#xD;
        documents, equations) in the original conceptual model, and compare with the appropriate counterpart to verify how&#xD;
        closely the executable model matches.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Face Validation&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        One of the benefits of face validation is that it can effectively be used during a real-time virtual simulation&#xD;
        where the interaction between the user and the simulation is of priority. The best way to validate that the model&#xD;
        meets the criteria, is by having users who have experienced the model situation in real life confirm that the model&#xD;
        accurately represents the situation they are familiar with.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Walkthrough&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A walkthrough is a scheduled meeting with the author/authors in charge of the model, or documents that are set to&#xD;
        be reviewed. In addition to the authors, there is usually a group of senior technical, and possibly business staff&#xD;
        that are there to analyze the model. Finally, there is a facilitator who is in charge of leading the meeting. Prior&#xD;
        to the official meeting, the author/authors will review the document/model for any potential cosmetic errors.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Desk checking&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Desk checking consists of the author careful stepping through the model in an attempt to catch any inconsistencies.&#xD;
        The author will thoroughly read all original documents, notes, and goals and try to verify that the completed&#xD;
        product accurately and completely modeled everything that it set out to do.&#xD;
    &lt;/li>&#xD;
&lt;/ul></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
