<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmi:id="-FqvPnfNHqlxK6GiP_GIsEw" name="new_discipline,_xrJ7EN9DEeqLEKK0pLdylg" guid="-FqvPnfNHqlxK6GiP_GIsEw" changeDate="2020-10-12T00:51:45.684-0300">
  <mainDescription>&lt;p>&#xD;
    In general, a script can be defined as a sequence of steps necessary to carry out a performance testing execution&#xD;
    instance.&lt;br />&#xD;
    Scripts can be developed by programming languages, such as C, Java, Python, etc.&lt;br />&#xD;
    Another manner of obtaining scripts is through Capture \&amp;amp; Replay tools, which execute a certain functionality of&#xD;
    the application to generate the scripts from that execution, which can imply a decrease in the level of complexity for&#xD;
    the elaboration of the scripts, a the code is abstracted from the user.&lt;br />&#xD;
    However, this approach can generate excess code, or even some type of undesired code. Therefore, despite a higher level&#xD;
    of complexity, the preparation of scripts manually can be very useful in a context where the team is proficient in the&#xD;
    scripts language or even in cases where script changes are constantly needed.&lt;br />&#xD;
    Another important aspect to be highlighted, in relation to the scripts creation, is the possibility of scripts&#xD;
    parametrization, that is, where through external files, the script execution parameters are dynamically changed.&lt;br />&#xD;
    Without this kind of functionality, performance testing becomes somewhat impractical.&lt;br />&#xD;
    The most available performance testing tools already allow the use of both, manual scripts and Capture \&amp;amp; Replay&#xD;
    approaches, as well as the scripts parametrization.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A scenario can be defined as a specific context whose application functionality will be tested.&lt;br />&#xD;
    This context is composed by the workload, and the way that this load behaves, and also by the set of all&#xD;
    characteristics inherent to that context.&lt;br />&#xD;
    For example, a load of 1000 initial users being incremented every 2 minutes in a product's purchase functionality&#xD;
    through an application's shopping cart.&lt;br />&#xD;
    This scenario is formed by a set of one or more scripts that will be executed so that the projected objective is&#xD;
    reached.&lt;br />&#xD;
    The scenarios must be thought in the initial phases of the test, more specifically in the planning and in the&#xD;
    requirements domain, so that later in the phases of design and configuration this scenario is instantiated for its&#xD;
    execution by scripts.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;img alt=&quot;&quot; src=&quot;resources/script_scenarios.png&quot; />&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
